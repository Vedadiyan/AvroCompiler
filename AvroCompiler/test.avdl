protocol TestProtocol {
    enum NativelyHoistedEnum {
      OK2
    }
    record Request {
      array<array<array<array<int>>>> crazy_Array;
      EnumThatNeedsHoisting enumThatNeeds_Hoisting;
      NativelyHoistedEnum nativelyHoistedEnum;
      Response referenceType;
      Hash fixedType;
      union {null, Hash} nonUnionNullableFixedType;
      union {null, string} nonUnionNullablePrimitiveType;
      map<string> simpleMap;
      union {map<string>, EnumThatNeedsHoisting} complexUnion;
      union {map<string>, EnumThatNeedsHoisting, null} moreComplexUnion;
      union {null, map<string>} nonUnionNullableMap;
      union {null, array<int>} nonUnionNullableArray;
      array<map<string>> arrayMap;
      union {null, array<map<string>>} nonUnionNullableArrayMap;
    } 
    fixed Hash(16);
    enum EnumThatNeedsHoisting {
      OK
    }
    record Response {
      string simplePrimitive;
      time_ms logicalType;
      decimal(1, 1) anotherLogicalType;
    }
    Response GetResults(Request request);
}
